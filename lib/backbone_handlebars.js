// Generated by CoffeeScript 1.3.1
(function() {
  var BH, _compile, _remove;

  BH = {
    postponed: {},
    rendered: {},
    postponeRender: function(parentView, subView) {
      var cid, _base;
      cid = parentView.cid;
      if ((_base = this.postponed)[cid] == null) {
        _base[cid] = [];
      }
      return this.postponed[cid].push(subView);
    },
    renderPostponed: function(parentView) {
      var cid;
      cid = parentView.cid;
      this.rendered[cid] = _.map(this.postponed[parentView.cid], function(view) {
        view.render();
        parentView.$("#_" + view.cid).replaceWith(view.el);
        return view;
      });
      return delete this.postponed[cid];
    },
    clearRendered: function(parentView) {
      var cid;
      cid = parentView.cid;
      if (this.rendered[cid]) {
        _.invoke(this.rendered[cid], 'remove');
        return delete this.rendered[cid];
      }
    }
  };

  Handlebars.registerHelper('view', function(name, options) {
    var view, viewClass;
    viewClass = _.inject((name || '').split('.'), (function(memo, fragment) {
      return memo[fragment] || false;
    }), window);
    if (!viewClass) {
      throw "Invalid view name - " + name;
    }
    view = new viewClass(options.hash);
    if (options.fn != null) {
      view.template = options.fn;
    }
    BH.postponeRender(options.data.view, view);
    return new Handlebars.SafeString('<div id="_' + view.cid + '"></div>');
  });

  _compile = Handlebars.compile;

  Handlebars.compile = function(template, options) {
    if (options == null) {
      options = {};
    }
    options.data = true;
    return _compile.call(this, template, options);
  };

  Backbone.View.prototype.renderTemplate = function(context) {
    if (context == null) {
      context = {};
    }
    BH.clearRendered(this);
    this.$el.html(this.template(context, {
      data: {
        view: this
      }
    }));
    return BH.renderPostponed(this);
  };

  Backbone.View.prototype.renderedSubViews = function() {
    return BH.rendered[this.cid];
  };

  _remove = Backbone.View.prototype.remove;

  Backbone.View.prototype.remove = function() {
    BH.clearRendered(this);
    return _remove.apply(this, arguments);
  };

  Backbone.Handlebars = BH;

}).call(this);
